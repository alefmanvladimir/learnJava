import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;

class OperationsTest {
//	public String getBit(int num, int bitIndex) {
//		return (String)(num >> 0);
//	}

	public static int getBit(int num, int bitIndex) {
		
		return ((num >> bitIndex-1) & 1);
	}
	
	public static int setBit(int num, int bitIndex) {
		if(((num >> bitIndex-1) & 1) > 0) {
			return num;
		} else {
			
		}
		return 0;
	}
	int x, y;
	public static int[] replaceNumber(int a, int b) {
		
		b = a^b;
		a = a^b;
		b = a^b;
		
		return new int[] {a, b};
	}

//	@Test
//	void test() {
//		byte a, b = 10, c = 20;
//		int x;
//		a = (byte) ((int) b + c);
//		x = b + c;
//
//		assertEquals(30, a);
//		assertEquals(4, 5 & 6);
//		assertEquals(7, 5 | 6);
//		assertEquals(6, 5 ^ 3);
//		assertEquals(5, 6 ^ 3);
//		assertEquals(0, 412343253 ^ 412343253);
//		assertEquals(2, ~-3);
//		assertEquals(-1, 25467 ^ ~25467);
//		assertEquals(128, 1 << 7);
//		assertEquals(true, (1 << 8) == (2 << 7));
//	}
	
	@Test
	public void binTest() {
		assertEquals(0, getBit(1000, 5));
		assertEquals(0, replaceNumber(10, 5)[0]);
	}

}
